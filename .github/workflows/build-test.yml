name: Build app (test & lint code), build & push Docker image

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        # python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest


    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest

    - name: Build & push Docker images
      uses: docker/build-push-action@v6.4.1
      with:
        # List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)
        add-hosts: # optional
        # List of extra privileged entitlement (e.g., network.host,security.insecure)
        allow: # optional
        # List of annotation to set to the image
        annotations: # optional
        # List of attestation parameters (e.g., type=sbom,generator=image)
        attests: # optional
        # List of build-time variables
        build-args: # optional
        # List of additional build contexts (e.g., name=path)
        build-contexts: # optional
        # Builder instance
        builder: # optional
        # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
        cache-from: # optional
        # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
        cache-to: # optional
        # Optional parent cgroup for the container used in the build
        cgroup-parent: # optional
        # Build's context is the set of files located in the specified PATH or URL
        context: # optional
        # Path to the Dockerfile
        file: # optional
        # List of metadata for an image
        labels: # optional
        # Load is a shorthand for --output=type=docker
        load: # optional, default is false
        # Set the networking mode for the RUN instructions during build
        network: # optional
        # Do not use cache when building the image
        no-cache: # optional, default is false
        # Do not cache specified stages
        no-cache-filters: # optional
        # List of output destinations (format: type=local,dest=path)
        outputs: # optional
        # List of target platforms for build
        platforms: # optional
        # Generate provenance attestation for the build (shorthand for --attest=type=provenance)
        pull: # optional, default is false
        # Push is a shorthand for --output=type=registry
        push: # optional, default is false
        # Generate SBOM attestation for the build (shorthand for --attest=type=sbom)
        sbom: # optional
        # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
        secrets: # optional
        # List of secret env vars to expose to the build (e.g., key=envname, MY_SECRET=MY_ENV_VAR)
        secret-envs: # optional
        # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
        secret-files: # optional
        # Size of /dev/shm (e.g., 2g)
        shm-size: # optional
        # List of SSH agent socket or keys to expose to the build
        ssh: # optional
        # GitHub Token used to authenticate against a repository for Git context
        github-token: # optional, default is ${{ github.token }}
